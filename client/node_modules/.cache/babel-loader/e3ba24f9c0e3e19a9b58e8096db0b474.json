{"ast":null,"code":"var _jsxFileName = \"/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/containers/maincontainer/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\nimport { getAllPosts, postPost, putPost, destroyPost } from \"../../services/posts\";\nimport Posts from \"../../screens/Posts/Posts\";\nimport PostEdit from \"../../screens/PostEdit/PostEdit\";\nimport PostCreate from \"../../screens/PostCreate/PostCreate\";\nimport PostDetail from \"../../screens/PostDetail/PostDetail\";\nimport MyAccount from \"../../screens/MyAccount/MyAccount\";\nimport PostPreview from \"../../components/PostPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainContainer(props) {\n  _s();\n\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n  };\n\n  const createPost = async postData => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => [...prevState, newPost]);\n    history.push(\"/myaccount\");\n  };\n\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push(\"/myaccount\");\n  };\n\n  const removePost = async id => {\n    await destroyPost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push(\"/myaccount\");\n  }; // <PostPreview allPosts={allPosts} />;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/new\",\n        children: /*#__PURE__*/_jsxDEV(PostCreate, {\n          createPost: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id/edit\",\n        children: /*#__PURE__*/_jsxDEV(PostEdit, {\n          updatePost: updatePost,\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostDetail, {\n          allPosts: allPosts,\n          removePost: removePost,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/myaccount\",\n        children: /*#__PURE__*/_jsxDEV(MyAccount, {\n          allPosts: allPosts,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainContainer, \"7nuxlWAdXESVv9CtOP4yDOPQ94U=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/containers/maincontainer/MainContainer.jsx"],"names":["React","useState","useEffect","Switch","Route","useHistory","getAllPosts","postPost","putPost","destroyPost","Posts","PostEdit","PostCreate","PostDetail","MyAccount","PostPreview","MainContainer","props","allPosts","setAllPosts","history","currentUser","fetchPosts","posts","createPost","postData","newPost","prevState","push","updatePost","id","updatedPost","map","post","Number","removePost","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\nimport {\n  getAllPosts,\n  postPost,\n  putPost,\n  destroyPost,\n} from \"../../services/posts\";\nimport Posts from \"../../screens/Posts/Posts\";\nimport PostEdit from \"../../screens/PostEdit/PostEdit\";\nimport PostCreate from \"../../screens/PostCreate/PostCreate\";\nimport PostDetail from \"../../screens/PostDetail/PostDetail\";\nimport MyAccount from \"../../screens/MyAccount/MyAccount\";\nimport PostPreview from \"../../components/PostPreview\";\n\nexport default function MainContainer(props) {\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n  };\n\n  const createPost = async (postData) => {\n    const newPost = await postPost(postData);\n    setAllPosts((prevState) => [...prevState, newPost]);\n    history.push(\"/myaccount\");\n  };\n\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    history.push(\"/myaccount\");\n  };\n\n  const removePost = async (id) => {\n    await destroyPost(id);\n    setAllPosts((prevState) => prevState.filter((post) => post.id !== id));\n    history.push(\"/myaccount\");\n  };\n  // <PostPreview allPosts={allPosts} />;\n  return (\n    <>\n      <Switch>\n        <Route path=\"/posts/new\">\n          <PostCreate createPost={createPost} />\n        </Route>\n        <Route path=\"/posts/:id/edit\">\n          <PostEdit updatePost={updatePost} allPosts={allPosts} />\n        </Route>\n        <Route path=\"/posts/:id\">\n          <PostDetail\n            allPosts={allPosts}\n            removePost={removePost}\n            currentUser={currentUser}\n          />\n        </Route>\n        <Route path=\"/myaccount\">\n          <MyAccount allPosts={allPosts} currentUser={currentUser} />\n        </Route>\n        <Route path=\"/\">\n          <Posts allPosts={allPosts} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}