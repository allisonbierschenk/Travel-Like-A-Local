{"ast":null,"code":"var _jsxFileName = \"/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/screens/PostDetail/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../../components/Comments\";\nimport { registerUser } from \"../../services/auth\";\nimport { getAllComments, addComment } from \"../../services/comments\";\nimport \"./PostDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const history = useHistory();\n  const {\n    allPosts,\n    removePost,\n    currentUser,\n    username\n  } = props;\n  const [comments, setComments] = useState([]);\n  const {\n    id\n  } = useParams(); // const getUser = async () => {\n  //   const user = await registerUser(registerData)\n  // }\n\n  const getComments = async () => {\n    const comments = await getAllComments(id);\n    setComments(comments);\n  };\n\n  const createComment = async (commentData, id) => {\n    const newComment = await addComment(commentData, id);\n    setComments(prevState => [...prevState, newComment]);\n    history.push(`/posts/${post.id}`);\n  };\n\n  useEffect(() => {\n    if (allPosts.length) {\n      const onePost = allPosts.find(post => post.id === Number(id));\n      setPost(onePost);\n    }\n\n    getComments();\n  }, [allPosts, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-detail-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-detail-destination\",\n        children: post.destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === post.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => removePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-comments\",\n        children: comments && comments.map(comment => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"each-comment\",\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 24\n          }, this);\n\n          /*#__PURE__*/\n          _jsxDEV(\"p\", {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        createComment: createComment,\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"mo74sUPOIJr6yLF0h/0W2wh8grk=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/screens/PostDetail/PostDetail.jsx"],"names":["React","useState","useEffect","useHistory","useParams","Link","Comments","registerUser","getAllComments","addComment","PostDetail","props","post","setPost","history","allPosts","removePost","currentUser","username","comments","setComments","id","getComments","createComment","commentData","newComment","prevState","push","length","onePost","find","Number","title","destination","content","user_id","map","comment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../../components/Comments\";\nimport { registerUser } from \"../../services/auth\";\nimport { getAllComments, addComment } from \"../../services/comments\";\nimport \"./PostDetail.css\";\n\nexport default function PostDetail(props) {\n  const [post, setPost] = useState(null);\n  const history = useHistory();\n  const { allPosts, removePost, currentUser, username } = props;\n  const [comments, setComments] = useState([]);\n  const { id } = useParams();\n\n  // const getUser = async () => {\n  //   const user = await registerUser(registerData)\n  // }\n\n  const getComments = async () => {\n    const comments = await getAllComments(id);\n    setComments(comments);\n  };\n\n  const createComment = async (commentData, id) => {\n    const newComment = await addComment(commentData, id);\n    setComments((prevState) => [...prevState, newComment]);\n    history.push(`/posts/${post.id}`);\n  };\n  useEffect(() => {\n    if (allPosts.length) {\n      const onePost = allPosts.find((post) => post.id === Number(id));\n      setPost(onePost);\n    }\n    getComments();\n  }, [allPosts, id]);\n\n  return (\n    <div>\n      {post && (\n        <div className=\"post-detail\">\n          <h3 className=\"post-detail-title\">{post.title}</h3>\n          <p className=\"post-detail-destination\">{post.destination}</p>\n          <p className=\"content\">{post.content}</p>\n          {currentUser?.id === post.user_id && (\n            <>\n              <Link to={`/posts/${post.id}/edit`}>\n                <button className=\"button\">Update</button>\n              </Link>\n              <button className=\"button\" onClick={() => removePost(post.id)}>\n                Delete\n              </button>\n            </>\n          )}\n          <div className=\"all-comments\">\n            {comments &&\n              comments.map((comment) => {\n                return <p className=\"each-comment\">{comment.content}</p>;\n                <p>{username}</p>;\n              })}\n          </div>\n          <Comments createComment={createComment} postId={post.id} />\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}