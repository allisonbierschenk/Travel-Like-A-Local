{"ast":null,"code":"var _jsxFileName = \"/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/screens/PostDetail/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../../components/Comments\";\nimport { getAllComments, addComment } from \"../../services/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const history = useHistory();\n  const {\n    allPosts,\n    removePost,\n    currentUser\n  } = props;\n  const [comments, setComments] = useState([]);\n  const {\n    id\n  } = useParams();\n\n  const getComments = async () => {\n    const comments = await getAllComments(id);\n    setComments(comments);\n  };\n\n  const createComment = async commentData => {\n    const newComment = await addComment(commentData, postId);\n    setComments(prevState => [...prevState, newComment]);\n    history.pushState(`/posts/${post.id}`);\n  };\n\n  useEffect(() => {\n    if (allPosts.length) {\n      const onePost = allPosts.find(post => post.id === Number(id));\n      setPost(onePost);\n    }\n\n    getComments();\n  }, [allPosts, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.destination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === post.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removePost(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Leave a comment below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Comments, {\n          createComment: createComment,\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), comments && comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"mo74sUPOIJr6yLF0h/0W2wh8grk=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/allisonreynolds/Desktop/General_Assmebly/Sapphire/unit_4/project_4/Travel-Like-A-Local/client/src/screens/PostDetail/PostDetail.jsx"],"names":["React","useState","useEffect","useHistory","useParams","Link","Comments","getAllComments","addComment","PostDetail","props","post","setPost","history","allPosts","removePost","currentUser","comments","setComments","id","getComments","createComment","commentData","newComment","postId","prevState","pushState","length","onePost","find","Number","title","destination","content","user_id","map","comment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../../components/Comments\";\nimport { getAllComments, addComment } from \"../../services/comments\";\n\nexport default function PostDetail(props) {\n  const [post, setPost] = useState(null);\n  const history = useHistory();\n  const { allPosts, removePost, currentUser } = props;\n  const [comments, setComments] = useState([]);\n  const { id } = useParams();\n\n  const getComments = async () => {\n    const comments = await getAllComments(id);\n    setComments(comments);\n  };\n\n  const createComment = async (commentData) => {\n    const newComment = await addComment(commentData, postId);\n    setComments((prevState) => [...prevState, newComment]);\n    history.pushState(`/posts/${post.id}`);\n  };\n  useEffect(() => {\n    if (allPosts.length) {\n      const onePost = allPosts.find((post) => post.id === Number(id));\n      setPost(onePost);\n    }\n    getComments();\n  }, [allPosts, id]);\n\n  return (\n    <div>\n      {post && (\n        <div>\n          <h3>{post.title}</h3>\n          <p>{post.destination}</p>\n          <p>{post.content}</p>\n          {currentUser?.id === post.user_id && (\n            <>\n              <Link to={`/posts/${post.id}/edit`}>\n                <button>Update</button>\n              </Link>\n              <button onClick={() => removePost(post.id)}>Delete</button>\n            </>\n          )}\n          <p>Leave a comment below!</p>\n          <p>\n            <Comments createComment={createComment} postId={post.id} />\n          </p>\n          {comments &&\n            comments.map((comment) => {\n              return <p>{comment.content}</p>;\n            })}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}